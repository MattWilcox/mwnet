@layer design {
	:root {
		--max-content-width: 48rem;
	}

	.skiplink {
		position: absolute; inset: 0 0 auto 0;
		padding: 0.5em;
		background-color: hsl( var(--black) ); color: hsl( var(--white) );
		text-decoration: underline;
		clip-path: polygon(0 0, 100% 0, 100% 0%, 0 0%);
		transition: clip-path, var(--very-fast);
	}
	.skiplink:focus {
		clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
	}

	/*
		And it's for this sort of use case that I _really_ want native @mixin support.
		As it is, you either have to:
			- inject "utility classes" in to mark-up (Which makes it tied to a singular layout design - fragile)
			- Do what I have here and "bundle" selectors - which is fragile and causes fragmentation in the CSS file
	*/
	:where(
		.layout_grid1,
		footer > section,
		html[data-template='home'] header
	 ) {
		--_min-gutters: var(--gap);

		display: grid;
		grid-template-columns:
			[full-width-start]
			minmax(var(--_min-gutters), 2fr)
			[content-extended-start content-start]
			min( calc(100% - (2 * var(--_min-gutters))), var(--max-content-width) )
			[content-end content-extended-end]
			minmax(var(--_min-gutters), 2fr)
			[full-width-end];

		@media screen and (min-width: 72rem) {
			grid-template-columns:
				[full-width-start]
				minmax(var(--_min-gutters), 2fr)
				[content-extended-start]
				minmax(0, 1fr)
				[content-start]
				min( calc(100% - (2 * var(--_min-gutters))), var(--max-content-width) )
				[content-end]
				minmax(0, 1fr)
				[content-extended-end]
				minmax(var(--_min-gutters), 2fr)
				[full-width-end];
		}
	}

	.siteIntro {
		grid-column: content;
		padding-block: var(--gap);
	}

	header {
		padding-block-start: calc(var(--gap) * 2);

		hgroup {
			grid-column: content;

			a {
				font-size: var(--font-size-diminished);
			}
		}

		.callout {
			grid-column: content-extended; /* place the block where we want it */
			display: grid; grid-template-columns: subgrid; /* inherit the parents' grid */
			margin-block: calc(2 * var(--gap));
			padding: calc(2 * var(--gap)) var(--gap);
			border: 2px solid currentColor;
			transform: rotate(-1.5deg);
			font-family: var(--font-family-code);
			background-color: white;
			filter: drop-shadow(0 0 var(--gap) hsl(0 0% 0% / 0.2));

			& > * {
				grid-column: content;
				padding-inline: var(--gap);
			}
		}
	}

	main {
		padding-block-end: calc(var(--gap) * 2);
	}

	footer {
		border-block-start: 3px solid currentColor;
		font-size: var(--font-size-diminished);

		:where(& > section) {
			container: footerSection / inline-size;

			.containerChild {
				grid-column: content-extended;
			}
		}

		:where(#elsewhere, #elsewhen) {
			h2 {
				border-block-end: 1px solid currentColor;
			}
			.wrapper {
				padding-block-start: 0.5em;
				display: grid; gap: var(--gap);
			}

			ul {
				display: flex; flex-direction: column; gap: 0.25em;
			}

			@container footerSection (min-width: 28rem) {
				.wrapper {
					grid-template-columns: 1fr 1fr;
				}

				li {
					text-align: right;
				}
			}

			@container footerSection (min-width: 48rem) {
				.wrapper {
					grid-template-columns: 1fr 2fr;
				}
			}
		}

		:where(#elsewhere) {
			padding-block-start: calc(var(--gap) * 2);
		}
		:where(#elsewhen) {
			padding-block: calc(var(--gap) * 2);
		}

		:where(#minutae) {
			border-top: 1px solid currentColor;

			.containerChild{
				grid-column: full-width;
				display: flex; flex-wrap: wrap; gap: var(--gap); justify-content: space-between;
				padding-inline: var(--gap); padding-block: var(--gap);
			}

			a {
				text-decoration: underline;
			}
		}
	}
}

@layer utilities {
	.uc_rich-text {
		& a[href^="http" i]:not([href*="mattwilcox.net" i]) {
			/* links to external websites */
			color: blue;

			&::after {
				content: "";
				vertical-align: top;
				display: inline-block;
				width: calc(1ch);
				height: 1ch;
				margin-inline-start: 0.25ch;
				background: transparent url('/design-assets/images/globe-alt.svg') 0 0 / contain no-repeat;
			}
		}

		& a[href*="mattwilcox.net" i] {
			/* links to other pages on this domain */
			color: green;
		}

		& a[href^='#'] {
			/* internal page links */

			&::after {
				content: "";
				vertical-align: top;
				display: inline-block;
				width: calc(1ch);
				height: 1ch;
				margin-inline-start: 0.25ch;
				background: transparent url('/design-assets/images/switch-vertical.svg') 0 0 / contain no-repeat;
			}
		}

		& a[target='_blank'] {
			/* Style links that open in a new window */

			&::after {
				content: "";
				vertical-align: top;
				display: inline-block;
				width: calc(1ch);
				height: 1ch;
				margin-inline-start: 0.25ch;
				background: transparent url('/design-assets/images/external-link.svg') 0 0 / contain no-repeat;
			}
		}

		& a[target='_blank'][href^="http" i]:not([href*="mattwilcox.net" i]) {
			/* links to external websites that open in a new window */

			&::after {
				content: "";
				vertical-align: top;
				display: inline-block;
				width: calc(2.25ch);
				height: 1ch;
				margin-inline-start: 0.25ch;
				background-color: transparent;
				background-image: url('/design-assets/images/globe-alt.svg'),
				url('/design-assets/images/external-link.svg');
				background-position: 0 0,
				1.25ch 0;
				background-size: auto 1ch,
				auto 1ch;
				background-repeat: no-repeat,
				no-repeat;
			}
		}
	}

	.uc_tabular {
		font-variant-numeric: tabular-nums;
	}
}